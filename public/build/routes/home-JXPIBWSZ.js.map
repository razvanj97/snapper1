{
  "version": 3,
  "sources": ["../../../app/routes/home.tsx", "../../../app/components/user-panel.tsx", "../../../app/components/search-bar.tsx"],
  "sourcesContent": ["// app/routes/home.tsx\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport { requireUserId, getUser } from \"~/utils/auth.server\";\nimport { Layout } from \"~/components/layout\";\nimport { UserPanel } from \"~/components/user-panel\";\nimport { getOtherUsers } from \"~/utils/user.server\";\nimport { useLoaderData, Outlet } from \"@remix-run/react\";\nimport { getFilteredKudos, getRecentKudos } from \"~/utils/kudos.server\";\nimport { Kudo } from \"~/components/kudo\";\nimport { Kudo as IKudo, Profile, Prisma } from \"@prisma/client\";\nimport { SearchBar } from \"~/components/search-bar\";\n\ninterface KudoWithProfile extends IKudo {\n\tauthor: {\n\t\tprofile: Profile;\n\t};\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\tconst user = await getUser(request);\n\tconst userId = await requireUserId(request);\n\tconst users = await getOtherUsers(userId);\n\t// Pulls out the URL parameters.\n\tconst url = new URL(request.url);\n\tconst sort = url.searchParams.get(\"sort\");\n\tconst filter = url.searchParams.get(\"filter\");\n\n\t// Builds a sortOptions object to pass into your Prisma query that may vary depending on the data passed in the URL.\n\tlet sortOptions: Prisma.KudoOrderByWithRelationInput = {};\n\tif (sort) {\n\t\tif (sort === \"date\") {\n\t\t\tsortOptions = { createdAt: \"desc\" };\n\t\t}\n\t\tif (sort === \"sender\") {\n\t\t\tsortOptions = { author: { profile: { firstName: \"asc\" } } };\n\t\t}\n\t\tif (sort === \"emoji\") {\n\t\t\tsortOptions = { style: { emoji: \"asc\" } };\n\t\t}\n\t}\n\n\t// Builds a textFilter object to pass into your Prisma query that may vary depending on the data passed in the URL.\n\tlet textFilter: Prisma.KudoWhereInput = {};\n\tif (filter) {\n\t\ttextFilter = {\n\t\t\tOR: [\n\t\t\t\t{ message: { mode: \"insensitive\", contains: filter } },\n\t\t\t\t{\n\t\t\t\t\tauthor: {\n\t\t\t\t\t\tOR: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprofile: {\n\t\t\t\t\t\t\t\t\tis: { firstName: { mode: \"insensitive\", contains: filter } },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprofile: {\n\t\t\t\t\t\t\t\t\tis: { lastName: { mode: \"insensitive\", contains: filter } },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\t//Updates the getFilteredKudos invocation to include the new filters.\n\tconst kudos = await getFilteredKudos(userId, sortOptions, textFilter);\n\tconst recentKudos = await getRecentKudos();\n\n\treturn json({ users, recentKudos, kudos, user });\n};\n\nexport default function Home() {\n\tconst { users, kudos, recentKudos, user } = useLoaderData();\n\treturn (\n\t\t<Layout>\n\t\t\t<Outlet />\n\t\t\t<div className=\"h-full flex\">\n\t\t\t\t<UserPanel users={users} />\n\t\t\t\t<div className=\"flex-1 flex flex-col\">\n\t\t\t\t\t<SearchBar profile={user.profile} />\n\t\t\t\t\t<div className=\"flex-1 flex\">\n\t\t\t\t\t\t<div className=\"w-full p-10 flex flex-col gap-y-4\">\n\t\t\t\t\t\t\t{kudos.map((kudo: KudoWithProfile) => (\n\t\t\t\t\t\t\t\t<Kudo key={kudo.id} kudo={kudo} profile={kudo.author.profile} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n}\n", "// app/components/user-panel.tsx\nimport { User } from \"@prisma/client\";\nimport { UserCircle } from \"~/components/user-circle\";\nimport { useNavigate } from \"@remix-run/react\";\n\nexport function UserPanel({ users }: { users: User[] }) {\n\tconst navigate = useNavigate();\n\treturn (\n\t\t<div className=\"w-1/6 bg-gray-200 flex flex-col\">\n\t\t\t<div className=\"text-center bg-gray-300 h-20 flex items-center justify-center\">\n\t\t\t\t<h2 className=\"text-xl text-blue-600 font-semibold\">My Team</h2>\n\t\t\t</div>\n\t\t\t<div className=\"flex-1 overflow-y-scroll py-4 flex flex-col gap-y-10\">\n\t\t\t\t{users.map((user) => (\n\t\t\t\t\t<UserCircle\n\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\tprofile={user.profile}\n\t\t\t\t\t\tclassName=\"h-24 w-24 mx-auto flex-shrink-0\"\n\t\t\t\t\t\tonClick={() => navigate(`kudo/${user.id}`)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"text-center p-6 bg-gray-300\">\n\t\t\t\t<form action=\"/logout\" method=\"post\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n\t\t\t\t\t\tSign Out\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n", "// app/components/search-bar.tsx\n\nimport { useNavigate, useSearchParams } from \"@remix-run/react\";\nimport { SelectBox } from \"./select-box\";\nimport { sortOptions } from \"~/utils/constants\";\nimport { UserCircle } from \"./user-circle\";\nimport type { Profile } from \"@prisma/client\";\n\ninterface props {\n\tprofile: Profile;\n}\n\nexport function SearchBar({ profile }: props) {\n\tconst navigate = useNavigate();\n\tlet [searchParams] = useSearchParams();\n\n\tconst clearFilters = () => {\n\t\tsearchParams.delete(\"filter\");\n\t\tsearchParams.delete(\"sort\");\n\t\tnavigate(\"/home\");\n\t};\n\n\treturn (\n\t\t<form className=\"w-full px-6 flex items-center gap-x-4 border-b-4 border-b-blue-900 border-opacity-30 h-20\">\n\t\t\t<div className={`flex items-center w-2/5`}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"filter\"\n\t\t\t\t\tclassName=\"w-full rounded-xl px-3 py-2\"\n\t\t\t\t\tplaceholder=\"Search a message or name\"\n\t\t\t\t/>\n\t\t\t\t<svg\n\t\t\t\t\tclassName=\"w-4 h-4 fill-current text-gray-400 -ml-8\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\">\n\t\t\t\t\t<path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n\t\t\t\t\t<path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<SelectBox\n\t\t\t\tclassName=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n\t\t\t\tcontainerClassName=\"w-40\"\n\t\t\t\tname=\"sort\"\n\t\t\t\toptions={sortOptions}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n\t\t\t\tSearch\n\t\t\t</button>\n\n\t\t\t{searchParams.get(\"filter\") && (\n\t\t\t\t<button\n\t\t\t\t\tonClick={clearFilters}\n\t\t\t\t\tclassName=\"rounded-xl bg-red-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n\t\t\t\t\tClear Filters\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<div className=\"flex-1\" />\n\t\t\t<UserCircle\n\t\t\t\tclassName=\"h-14 w-14 transition duration-300 ease-in-out hover:scale-110 hover:border-2 hover:border-yellow-300\"\n\t\t\t\tprofile={profile}\n\t\t\t\tonClick={() => navigate(\"profile\")}\n\t\t\t/>\n\t\t</form>\n\t);\n}\n"],
  "mappings": "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",
  "names": []
}
