{
  "version": 3,
  "sources": ["../../../../app/routes/home/kudo.$userId.tsx"],
  "sourcesContent": ["// app/routes/home/kudo.$userId.tsx\nimport {\n\tjson,\n\tLoaderFunction,\n\tredirect,\n\tActionFunction,\n} from \"@remix-run/node\";\nimport { useLoaderData, useActionData } from \"@remix-run/react\";\nimport { getUserById } from \"~/utils/user.server\";\nimport { Modal } from \"~/components/modal\";\nimport { getUser } from \"~/utils/auth.server\";\nimport { UserCircle } from \"~/components/user-circle\";\nimport { useState } from \"react\";\nimport { Color, Emoji, KudoStyle } from \"@prisma/client\";\nimport { SelectBox } from \"~/components/select-box\";\nimport { colorMap, emojiMap } from \"~/utils/constants\";\nimport { Kudo } from \"~/components/kudo\";\nimport { requireUserId } from \"~/utils/auth.server\";\nimport { createKudo } from \"~/utils/kudos.server\";\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n\tconst { userId } = params;\n\n\tif (typeof userId !== \"string\") {\n\t\treturn redirect(\"/home\");\n\t}\n\n\tconst user = await getUser(request);\n\tconst recipient = await getUserById(userId);\n\n\treturn json({ recipient, user });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n\tconst userId = await requireUserId(request);\n\n\t// Pulls out all of the form data and fields you need from the request.\n\tconst form = await request.formData();\n\tconst message = form.get(\"message\");\n\tconst backgroundColor = form.get(\"backgroundColor\");\n\tconst textColor = form.get(\"textColor\");\n\tconst emoji = form.get(\"emoji\");\n\tconst recipientId = form.get(\"recipientId\");\n\n\t// Validates all of the form data and send the appropriate errors back to the form to be displayed if something goes wrong.\n\tif (\n\t\ttypeof message !== \"string\" ||\n\t\ttypeof recipientId !== \"string\" ||\n\t\ttypeof backgroundColor !== \"string\" ||\n\t\ttypeof textColor !== \"string\" ||\n\t\ttypeof emoji !== \"string\"\n\t) {\n\t\treturn json({ error: `Invalid Form Data` }, { status: 400 });\n\t}\n\n\tif (!message.length) {\n\t\treturn json({ error: `Please provide a message.` }, { status: 400 });\n\t}\n\n\tif (!recipientId.length) {\n\t\treturn json({ error: `No recipient found...` }, { status: 400 });\n\t}\n\n\t// Creates the new kudo using the createKudo function.\n\tawait createKudo(message, userId, recipientId, {\n\t\tbackgroundColor: backgroundColor as Color,\n\t\ttextColor: textColor as Color,\n\t\temoji: emoji as Emoji,\n\t});\n\n\t// Redirects the user to the /home route, causing the modal to close.\n\treturn redirect(\"/home\");\n};\n\nexport default function KudoModal() {\n\t// Sets up the various form variables you will need to handle the form data and errors.\n\tconst actionData = useActionData();\n\tconst [formError] = useState(actionData?.error || \"\");\n\tconst [formData, setFormData] = useState({\n\t\tmessage: \"\",\n\t\tstyle: {\n\t\t\tbackgroundColor: \"RED\",\n\t\t\ttextColor: \"WHITE\",\n\t\t\temoji: \"THUMBSUP\",\n\t\t} as KudoStyle,\n\t});\n\n\t//  Creates the function that will handle input changes.\n\tconst handleChange = (\n\t\te: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t\tfield: string\n\t) => {\n\t\tsetFormData((data) => ({ ...data, [field]: e.target.value }));\n\t};\n\n\tconst { recipient, user } = useLoaderData();\n\n\tconst handleStyleChange = (\n\t\te: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t\tfield: string\n\t) => {\n\t\tsetFormData((data) => ({\n\t\t\t...data,\n\t\t\tstyle: {\n\t\t\t\t...data.style,\n\t\t\t\t[field]: e.target.value,\n\t\t\t},\n\t\t}));\n\t};\n\n\tconst getOptions = (data: any) =>\n\t\tObject.keys(data).reduce((acc: any[], curr) => {\n\t\t\tacc.push({\n\t\t\t\tname: curr.charAt(0).toUpperCase() + curr.slice(1).toLowerCase(),\n\t\t\t\tvalue: curr,\n\t\t\t});\n\t\t\treturn acc;\n\t\t}, []);\n\n\tconst colors = getOptions(colorMap);\n\tconst emojis = getOptions(emojiMap);\n\n\t// Renders the basic layout of the form component in place of what was the <h2> tag.\n\treturn (\n\t\t<Modal isOpen={true} className=\"w-2/3 p-10\">\n\t\t\t<div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full mb-2\">\n\t\t\t\t{formError}\n\t\t\t</div>\n\t\t\t<form method=\"post\">\n\t\t\t\t<input type=\"hidden\" value={recipient.id} name=\"recipientId\" />\n\t\t\t\t<div className=\"flex flex-col md:flex-row gap-y-2 md:gap-y-0\">\n\t\t\t\t\t<div className=\"text-center flex flex-col items-center gap-y-2 pr-8\">\n\t\t\t\t\t\t<UserCircle profile={recipient.profile} className=\"h-24 w-24\" />\n\t\t\t\t\t\t<p className=\"text-blue-300\">\n\t\t\t\t\t\t\t{recipient.profile.firstName} {recipient.profile.lastName}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{recipient.profile.department && (\n\t\t\t\t\t\t\t<span className=\"px-2 py-1 bg-gray-300 rounded-xl text-blue-300 w-auto\">\n\t\t\t\t\t\t\t\t{recipient.profile.department[0].toUpperCase() +\n\t\t\t\t\t\t\t\t\trecipient.profile.department.toLowerCase().slice(1)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex-1 flex flex-col gap-y-4\">\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\t\tclassName=\"w-full rounded-xl h-40 p-4\"\n\t\t\t\t\t\t\tvalue={formData.message}\n\t\t\t\t\t\t\tonChange={(e) => handleChange(e, \"message\")}\n\t\t\t\t\t\t\tplaceholder={`Say something nice about ${recipient.profile.firstName}...`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"flex flex-col items-center md:flex-row md:justify-start gap-x-4\">\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={colors}\n\t\t\t\t\t\t\t\tname=\"backgroundColor\"\n\t\t\t\t\t\t\t\tvalue={formData.style.backgroundColor}\n\t\t\t\t\t\t\t\tonChange={(e) => handleStyleChange(e, \"backgroundColor\")}\n\t\t\t\t\t\t\t\tlabel=\"Background Color\"\n\t\t\t\t\t\t\t\tcontainerClassName=\"w-36\"\n\t\t\t\t\t\t\t\tclassName=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={colors}\n\t\t\t\t\t\t\t\tname=\"textColor\"\n\t\t\t\t\t\t\t\tvalue={formData.style.textColor}\n\t\t\t\t\t\t\t\tonChange={(e) => handleStyleChange(e, \"textColor\")}\n\t\t\t\t\t\t\t\tlabel=\"Text Color\"\n\t\t\t\t\t\t\t\tcontainerClassName=\"w-36\"\n\t\t\t\t\t\t\t\tclassName=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={emojis}\n\t\t\t\t\t\t\t\tlabel=\"Emoji\"\n\t\t\t\t\t\t\t\tname=\"emoji\"\n\t\t\t\t\t\t\t\tvalue={formData.style.emoji}\n\t\t\t\t\t\t\t\tonChange={(e) => handleStyleChange(e, \"emoji\")}\n\t\t\t\t\t\t\t\tcontainerClassName=\"w-36\"\n\t\t\t\t\t\t\t\tclassName=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<p className=\"text-blue-600 font-semibold mb-2\">Preview</p>\n\t\t\t\t<div className=\"flex flex-col items-center md:flex-row gap-x-24 gap-y-2 md:gap-y-0\">\n\t\t\t\t\t<Kudo profile={user.profile} kudo={formData} />\n\t\t\t\t\t<div className=\"flex-1\" />\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 w-80 h-12 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n\t\t\t\t\t\tSend\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_auth"]
}
