{
  "version": 3,
  "sources": ["../../../../app/routes/home/profile.tsx"],
  "sourcesContent": ["// app/routes/home/profile.tsx\n\n// ... renders a modal into a new ProfileSettings component.\n// ... retrieves and returns the logged in user's data within a loader function.\n// ... uses the useLoaderData hook to access the user data returned from the loader function.\nimport {\n\tLoaderFunction,\n\tActionFunction,\n\tredirect,\n\tjson,\n} from \"@remix-run/node\";\nimport { useLoaderData, useActionData } from \"@remix-run/react\";\nimport { Modal } from \"~/components/modal\";\nimport { getUser, requireUserId, logout } from \"~/utils/auth.server\";\n//Added the imports needed in the changes made.\nimport { useState, useEffect, useRef } from \"react\";\nimport { FormField } from \"~/components/form-field\";\nimport { validateName } from \"~/utils/validators.server\";\nimport { updateUser, deleteUser } from \"~/utils/user.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n\tconst userId = await requireUserId(request);\n\tconst form = await request.formData();\n\t// Pulls out the form data points you need from the request object.\n\tlet firstName = form.get(\"firstName\");\n\tlet lastName = form.get(\"lastName\");\n\tconst action = form.get(\"_action\");\n\n\tswitch (action) {\n\t\tcase \"save\":\n\t\t\t// Ensures each piece of data you care about is of the string data type.\n\t\t\tif (typeof firstName !== \"string\" || typeof lastName !== \"string\") {\n\t\t\t\treturn json({ error: `Invalid Form Data` }, { status: 400 });\n\t\t\t}\n\n\t\t\t// Validates the data using the validateName function written previously.\n\t\t\tconst errors = {\n\t\t\t\tfirstName: validateName(firstName),\n\t\t\t\tlastName: validateName(lastName),\n\t\t\t};\n\n\t\t\tif (Object.values(errors).some(Boolean))\n\t\t\t\treturn json(\n\t\t\t\t\t{ errors, fields: { firstName, lastName } },\n\t\t\t\t\t{ status: 400 }\n\t\t\t\t);\n\n\t\t\t// Update the user here...\n\t\t\tawait updateUser(userId, {\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t});\n\n\t\t\t// Redirects to the /home route, closing the settings modal.\n\t\t\treturn redirect(\"/home\");\n\n\t\t// Delete button is clicked\n\t\tcase \"delete\":\n\t\t\t// Perform delete function\n\t\t\tawait deleteUser(userId);\n\t\t\treturn logout(request);\n\t\tdefault:\n\t\t\treturn json({ error: `Invalid Form Data` }, { status: 400 });\n\t}\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\tconst user = await getUser(request);\n\treturn json({ user });\n};\n\nexport default function ProfileSettings() {\n\tconst { user } = useLoaderData();\n\tconst actionData = useActionData();\n\tconst [formError, setFormError] = useState(actionData?.error || \"\");\n\tconst firstLoad = useRef(true);\n\t// Created a formData object in state that holds the form's values. This defaults those values to the logged in user's existing profile data.\n\tconst [formData, setFormData] = useState({\n\t\tfirstName: actionData?.fields?.firstName || user?.profile?.firstName,\n\t\tlastName: actionData?.fields?.lastName || user?.profile?.lastName,\n\t});\n\n\tuseEffect(() => {\n\t\tif (!firstLoad.current) {\n\t\t\tsetFormError(\"\");\n\t\t}\n\t}, [formData]);\n\n\tuseEffect(() => {\n\t\tfirstLoad.current = false;\n\t}, []);\n\n\t// Created a function that takes in an HTML change event and a field name as parameters. Those are used to update the formData state as input fields' values change in the component.\n\tconst handleInputChange = (\n\t\tevent: React.ChangeEvent<HTMLInputElement>,\n\t\tfield: string\n\t) => {\n\t\tsetFormData((form) => ({ ...form, [field]: event.target.value }));\n\t};\n\n\treturn (\n\t\t<Modal isOpen={true} className=\"w-1/3\">\n\t\t\t<div className=\"p-3\">\n\t\t\t\t<h2 className=\"text-4xl font-semibold text-blue-600 text-center mb-4\">\n\t\t\t\t\tYour Profile\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full mb-2\">\n\t\t\t\t\t+ {formError}+{\" \"}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\t\t!confirm(\"Are you sure?\") ? e.preventDefault() : true\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\t\thtmlFor=\"firstName\"\n\t\t\t\t\t\t\t\tlabel=\"First Name\"\n\t\t\t\t\t\t\t\tvalue={formData.firstName}\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(e, \"firstName\")}\n\t\t\t\t\t\t\t\terror={actionData?.errors?.firstName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\t\thtmlFor=\"lastName\"\n\t\t\t\t\t\t\t\tlabel=\"Last Name\"\n\t\t\t\t\t\t\t\tvalue={formData.lastName}\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(e, \"lastName\")}\n\t\t\t\t\t\t\t\terror={actionData?.errors?.lastName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tname=\"_action\"\n\t\t\t\t\t\t\t\tvalue=\"delete\"\n\t\t\t\t\t\t\t\tclassName=\"rounded-xl w-full bg-red-300 font-semibold text-white mt-4 px-16 py-2 transition duration-300 ease-in-out hover:bg-red-400 hover:-translate-y-1\">\n\t\t\t\t\t\t\t\tDelete Account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div className=\"w-full text-right mt-4\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-16 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n\t\t\t\t\t\t\t\t\tname=\"_action\"\n\t\t\t\t\t\t\t\t\tvalue=\"save\">\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAaA,kBAA+C;AAE/C,IAAAA,gBAA4C;AAE5C,wBAA6B;AAC7B,kBAAuC;AAlBvC;AAuEe,SAAR,kBAAmC;AAvE1C;AAwEC,QAAM,EAAE,KAAK,IAAI,cAAc;AAC/B,QAAM,aAAa,cAAc;AACjC,QAAM,CAAC,WAAW,YAAY,QAAI,yBAAS,yCAAY,UAAS,EAAE;AAClE,QAAM,gBAAY,sBAAO,IAAI;AAE7B,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS;AAAA,IACxC,aAAW,8CAAY,WAAZ,mBAAoB,gBAAa,kCAAM,YAAN,mBAAe;AAAA,IAC3D,YAAU,8CAAY,WAAZ,mBAAoB,eAAY,kCAAM,YAAN,mBAAe;AAAA,EAC1D,CAAC;AAED,+BAAU,MAAM;AACf,QAAI,CAAC,UAAU,SAAS;AACvB,mBAAa,EAAE;AAAA,IAChB;AAAA,EACD,GAAG,CAAC,QAAQ,CAAC;AAEb,+BAAU,MAAM;AACf,cAAU,UAAU;AAAA,EACrB,GAAG,CAAC,CAAC;AAGL,QAAM,oBAAoB,CACzB,OACA,UACI;AACJ,gBAAY,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,QAAQ,MAAM,OAAO,MAAM,EAAE;AAAA,EACjE;AAEA,SACC,mDAAC;AAAA,IAAM,QAAQ;AAAA,IAAM,WAAU;AAAA,IAC9B,6DAAC;AAAA,MAAI,WAAU;AAAA,MACd;AAAA,2DAAC;AAAA,UAAG,WAAU;AAAA,UAAwD;AAAA,WAAtE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC;AAAA,UAAI,WAAU;AAAA,UAA2E;AAAA;AAAA,YACtF;AAAA,YAAU;AAAA,YAAE;AAAA;AAAA,WADhB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC;AAAA,UAAI,WAAU;AAAA,UACd,6DAAC;AAAA,YAAI,WAAU;AAAA,YACd,6DAAC;AAAA,cACA,QAAO;AAAA,cACP,UAAU,CAAC,MACV,CAAC,QAAQ,eAAe,IAAI,EAAE,eAAe,IAAI;AAAA,cAElD;AAAA,mEAAC;AAAA,kBACA,SAAQ;AAAA,kBACR,OAAM;AAAA,kBACN,OAAO,SAAS;AAAA,kBAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG,WAAW;AAAA,kBACjD,QAAO,8CAAY,WAAZ,mBAAoB;AAAA,mBAL5B;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA,gBACA,mDAAC;AAAA,kBACA,SAAQ;AAAA,kBACR,OAAM;AAAA,kBACN,OAAO,SAAS;AAAA,kBAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG,UAAU;AAAA,kBAChD,QAAO,8CAAY,WAAZ,mBAAoB;AAAA,mBAL5B;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA,gBACA,mDAAC;AAAA,kBACA,MAAK;AAAA,kBACL,OAAM;AAAA,kBACN,WAAU;AAAA,kBAAkJ;AAAA,mBAH7J;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA,gBACA,mDAAC;AAAA,kBAAI,WAAU;AAAA,kBACd,6DAAC;AAAA,oBACA,WAAU;AAAA,oBACV,MAAK;AAAA,oBACL,OAAM;AAAA,oBAAO;AAAA,qBAHd;AAAA;AAAA;AAAA;AAAA,yBAKA;AAAA,mBAND;AAAA;AAAA;AAAA;AAAA,uBAOA;AAAA;AAAA,eAhCD;AAAA;AAAA;AAAA;AAAA,mBAiCA;AAAA,aAlCD;AAAA;AAAA;AAAA;AAAA,iBAmCA;AAAA,WApCD;AAAA;AAAA;AAAA;AAAA,eAqCA;AAAA;AAAA,OA5CD;AAAA;AAAA;AAAA;AAAA,WA6CA;AAAA,KA9CD;AAAA;AAAA;AAAA;AAAA,SA+CA;AAEF;",
  "names": ["import_react"]
}
